@page "/report"
@attribute [Authorize]
@using MRA.AssetsManagement.Web.Client.Services.ReportService
@using MRA.AssetsManagement.Web.Shared.Purchas
@inject IReportService ReportService


<MudTable Items="@Purches" Hover="true" Dense="true" FixedHeader="true">
    <ToolBarContent>
        <MudStack Row="true" Justify="Justify.SpaceBetween">
            <MudFab StartIcon="@Icons.Material.Filled.KeyboardArrowLeft" Size="Size.Small" OnClick="MinusTwoDays"/>
            <MudDateRangePicker @bind-DateRange="_dateRange" Variant="Variant.Outlined" Margin="Margin.Dense" DateChanged="HandleDateChanged" MaxDate="DateTime.Today"/>
            <MudFab StartIcon="@Icons.Material.Filled.KeyboardArrowRight" Size="Size.Small" OnClick="AddTwoDays"/>
            <MudSelect Margin="Margin.Dense" T="string" Label="Type" Variant="Variant.Outlined" @bind-Value="@SelectedType" @onchange="HandleSelectChange">
                @foreach (var type in Types)
                {
                    <MudSelectItem Value="@type.Name">@type.Name</MudSelectItem>
                }
            </MudSelect>
        
            <MudSpacer />
            <MudButton  Disabled="@_processing" OnClick="ProcessSomething" Variant="Variant.Filled" Color="Color.Primary">
                <MudText>Click me</MudText>
            </MudButton>
        </MudStack>
        <h5>All units: @Purches.Count</h5>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Type</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Price</MudTh>
        <MudTh>Quantity</MudTh>
    </HeaderContent>
    <RowTemplate>
        @if (_loading)
        {
            <MudTd DataLabel="Type">
                <MudSkeleton/>
            </MudTd>
            <MudTd DataLabel="Name">
                <MudSkeleton/>
            </MudTd>
            <MudTd DataLabel="Price">
                <MudSkeleton/>
            </MudTd>
            <MudTd DataLabel="Quantity">
                <MudSkeleton/>
            </MudTd>
        }
        else
        {
            <MudTd DataLabel="Type">
                <MudStack Row="true">
                    <MudText>@context.AssetType</MudText>
                </MudStack>
            </MudTd>
            <MudTd DataLabel="Name">@context.AssetName</MudTd>
            <MudTd DataLabel="Price">@context.Price</MudTd>
            <MudTd DataLabel="Quantity">@context.Quantity</MudTd>
        }
    </RowTemplate>
    <FooterContent>
       <MudTd><b>Total price</b></MudTd>
               <MudTd></MudTd>
               <MudTd><b>@TotalPrice</b></MudTd>
               <MudTd></MudTd>
    </FooterContent>
</MudTable>

@code {

    private bool _loading = true;
    private DateRange _dateRange = new DateRange(DateTime.Today, DateTime.Today.AddDays(2));

    private string? SelectedType { get; set; }

    private List<GetAssetType> Types = new List<GetAssetType>();

    private List<GetPurchasedAssets> Purches = new List<GetPurchasedAssets>();

    private bool _processing = false;
    private decimal TotalPrice => Purches.Sum(item => item.Price);
    

    protected override async Task OnInitializedAsync()
    {
        Types = await ReportService.Fetch2();
        Types.Add(new GetAssetType(){Name = "All"});
        _loading = true;
    }

    private void HandleSelectChange(ChangeEventArgs args)
    {
        if (args.Value.ToString() == "All")
        {
            SelectedType = null;
        }
        SelectedType = args.Value.ToString();
        StateHasChanged();
    }

    private void AddTwoDays()
    {
        _dateRange = new DateRange(_dateRange.Start?.AddDays(2), _dateRange.End?.AddDays(2));
        StateHasChanged();
    }

    private async Task MinusTwoDays()
    {
        _dateRange = new DateRange(_dateRange.Start?.AddDays(-2), _dateRange.End?.AddDays(-2));
        StateHasChanged();
    }

    async Task ProcessSomething()
    {
        _loading = true;
        var id = Types.FirstOrDefault(x => x.Name == SelectedType)?.Id;
        Purches = await ReportService.GetPurchases(new PurchasedAssetsRequest()
        {
            FromDate = _dateRange.Start, ToDate = _dateRange.End, AssetTypeId = id
        });
        _loading = false;
        StateHasChanged();
    }

}
