@using Blazored.LocalStorage
@inject ILocalStorageService LocalStorageService
@inject CustomAuthStateProvider CustomAuthStateProvider

<MudAppBar Elevation="2">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@OnToggleClick" />
    <MudSpacer />
        <MudMenu FullWidth="true" ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
            <ActivatorContent>
                <MudChip Style="font-size: 21px;" Icon="@Icons.Material.Filled.Person" Size="Size.Large" Color="Color.Primary">@_userName</MudChip>
        </ActivatorContent>
        <ChildContent>
            <MudMenuItem @onclick="CustomAuthStateProvider.LogoutUser">Sign Out</MudMenuItem>
        </ChildContent>
    </MudMenu>
</MudAppBar>

@code
{
    [Parameter]
    public EventCallback OnToggle { get; set; }

    private async void OnToggleClick()
    {
        await OnToggle.InvokeAsync();
    }
    private string? _userName;
    protected override async Task OnInitializedAsync()
    {
        await CustomAuthStateProvider.GetAuthenticationStateAsync();
        _userName = await LocalStorageService.GetItemAsync<string>("userName");
        StateHasChanged();
    }
}